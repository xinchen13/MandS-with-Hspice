$date
	Sun Mar 24 00:42:07 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module MandS_tb $end
$var wire 12 ! Sum [11:0] $end
$var wire 8 " Max [7:0] $end
$var reg 1 # clk $end
$var reg 8 $ data [7:0] $end
$var reg 1 % resetb $end
$var reg 1 & start $end
$var reg 1 ' valid $end
$scope module u_MandS $end
$var wire 8 ( Max [7:0] $end
$var wire 12 ) Sum [11:0] $end
$var wire 1 # clk $end
$var wire 8 * data [7:0] $end
$var wire 1 % resetb $end
$var wire 1 & start $end
$var wire 1 ' valid $end
$var wire 8 + valid_sum_data [7:0] $end
$var wire 12 , valid_new_psum [11:0] $end
$var wire 8 - valid_new_pmax [7:0] $end
$var wire 8 . valid_max_data [7:0] $end
$var wire 12 / psum [11:0] $end
$var wire 8 0 pmax [7:0] $end
$var wire 12 1 new_psum [11:0] $end
$var wire 8 2 new_pmax [7:0] $end
$scope module u_adder $end
$var wire 8 3 data [7:0] $end
$var wire 12 4 psum [11:0] $end
$var wire 12 5 new_psum [11:0] $end
$var wire 12 6 data_sign_extended [11:0] $end
$upscope $end
$scope module u_comparator $end
$var wire 8 7 a [7:0] $end
$var wire 8 8 out [7:0] $end
$var wire 1 9 ctrl $end
$var wire 8 : b [7:0] $end
$upscope $end
$scope module u_max_reg $end
$var wire 1 # clk $end
$var wire 8 ; data_in [7:0] $end
$var wire 1 % rst_n $end
$var reg 8 < data_out [7:0] $end
$upscope $end
$scope module u_sum_reg $end
$var wire 1 # clk $end
$var wire 12 = data_in [11:0] $end
$var wire 1 % rst_n $end
$var reg 12 > data_out [11:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 >
b0 =
b0 <
b0 ;
b0 :
09
b0 8
b10000000 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b10000000 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
0'
0&
0%
b0 $
1#
b0 "
b0 !
$end
#10000
0#
#20000
1#
#30000
0#
#40000
1#
1%
#50000
0#
#60000
b10000000 2
b10000000 8
b10000000 "
b10000000 (
b10000000 0
b10000000 :
b10000000 <
b10000000 -
b10000000 ;
1#
1&
#70000
0#
#80000
b11111011 -
b11111011 ;
b11111011 2
b11111011 8
19
b111111111011 ,
b111111111011 =
b11111011 .
b11111011 7
b111111111011 1
b111111111011 5
b111111111011 6
b11111011 +
b11111011 3
1#
b11111011 $
b11111011 *
1'
0&
#90000
0#
#100000
b111111111011 !
b111111111011 )
b111111111011 /
b111111111011 4
b111111111011 >
b11111011 "
b11111011 (
b11111011 0
b11111011 :
b11111011 <
b11111110 -
b11111110 ;
b11111110 2
b11111110 8
b111111111001 ,
b111111111001 =
b11111110 .
b11111110 7
b111111111001 1
b111111111001 5
b111111111110 6
b11111110 +
b11111110 3
1#
b11111110 $
b11111110 *
#110000
0#
#120000
b11111110 "
b11111110 (
b11111110 0
b11111110 :
b11111110 <
b111111111001 !
b111111111001 )
b111111111001 /
b111111111001 4
b111111111001 >
b11 -
b11 ;
b11 2
b11 8
b111111111100 ,
b111111111100 =
b11 .
b11 7
b111111111100 1
b111111111100 5
b11 6
b11 +
b11 3
1#
b11 $
b11 *
#130000
0#
#140000
09
b111111111100 !
b111111111100 )
b111111111100 /
b111111111100 4
b111111111100 >
b11 "
b11 (
b11 0
b11 :
b11 <
b11 -
b11 ;
b11 2
b11 8
b111111111101 ,
b111111111101 =
b1 .
b1 7
b111111111101 1
b111111111101 5
b1 6
b1 +
b1 3
1#
b1 $
b1 *
#150000
0#
#160000
b111111111101 !
b111111111101 )
b111111111101 /
b111111111101 4
b111111111101 >
b111 -
b111 ;
b111 2
b111 8
19
b100 ,
b100 =
b111 .
b111 7
b100 1
b100 5
b111 6
b111 +
b111 3
1#
b111 $
b111 *
#170000
0#
#180000
b100 !
b100 )
b100 /
b100 4
b100 >
b111 "
b111 (
b111 0
b111 :
b111 <
09
b111 -
b111 ;
b111 2
b111 8
b100 ,
b100 =
b0 .
b0 7
b100 1
b100 5
b0 6
b0 +
b0 3
1#
b0 $
b0 *
#190000
0#
#200000
b101 ,
b101 =
b1 .
b1 7
b101 1
b101 5
b1 6
b1 +
b1 3
1#
b1 $
b1 *
#210000
0#
#220000
b101 !
b101 )
b101 /
b101 4
b101 >
b0 ,
b0 =
b11111011 .
b11111011 7
b0 1
b0 5
b111111111011 6
b11111011 +
b11111011 3
1#
b11111011 $
b11111011 *
#230000
0#
#240000
b0 !
b0 )
b0 /
b0 4
b0 >
b11 ,
b11 =
b11 .
b11 7
b11 1
b11 5
b11 6
b11 +
b11 3
1#
b11 $
b11 *
#250000
0#
#260000
b11 !
b11 )
b11 /
b11 4
b11 >
b11 ,
b11 =
b10000000 .
b10000000 7
b11 1
b11 5
b0 6
b0 +
b0 3
1#
0'
#270000
0#
#280000
1#
#290000
0#
#300000
1#
#310000
0#
#320000
b10000000 2
b10000000 8
b10000000 "
b10000000 (
b10000000 0
b10000000 :
b10000000 <
b0 1
b0 5
b0 !
b0 )
b0 /
b0 4
b0 >
b10000000 -
b10000000 ;
b0 ,
b0 =
1#
1&
#330000
0#
#340000
b11111111 -
b11111111 ;
b11111111 2
b11111111 8
19
b111111111111 ,
b111111111111 =
b11111111 .
b11111111 7
b111111111111 1
b111111111111 5
b111111111111 6
b11111111 +
b11111111 3
1#
b11111111 $
b11111111 *
1'
0&
#350000
0#
#360000
b11111111 "
b11111111 (
b11111111 0
b11111111 :
b11111111 <
b111111111111 !
b111111111111 )
b111111111111 /
b111111111111 4
b111111111111 >
b101 -
b101 ;
b101 2
b101 8
b100 ,
b100 =
b101 .
b101 7
b100 1
b100 5
b101 6
b101 +
b101 3
1#
b101 $
b101 *
#370000
0#
#380000
b100 !
b100 )
b100 /
b100 4
b100 >
b101 "
b101 (
b101 0
b101 :
b101 <
09
b101 -
b101 ;
b101 2
b101 8
b111111101101 ,
b111111101101 =
b11101001 .
b11101001 7
b111111101101 1
b111111101101 5
b111111101001 6
b11101001 +
b11101001 3
1#
b11101001 $
b11101001 *
#390000
0#
#400000
b111111101101 !
b111111101101 )
b111111101101 /
b111111101101 4
b111111101101 >
b111111101101 ,
b111111101101 =
b10000000 .
b10000000 7
b111111101101 1
b111111101101 5
b0 6
b0 +
b0 3
1#
0'
#410000
0#
#420000
1#
#430000
0#
#440000
1#
#450000
b0 -
b0 ;
b0 ,
b0 =
b0 2
b0 8
b0 1
b0 5
b0 !
b0 )
b0 /
b0 4
b0 >
b0 "
b0 (
b0 0
b0 :
b0 <
0#
0%
#460000
1#
#470000
0#
#480000
1#
#490000
0#
